<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 오라클 접속 -->
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
        <property name="url" value="jdbc:log4jdbc:oracle:thin:@localhost:1521/orcl"/>
        <property name="username" value="scott"/>
        <property name="password" value="tiger"/>
    </bean>
   
    <!-- Mybatis 연동 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="dataSource"></property>
         <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
         <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"/>
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
    </bean>
    
    <bean name = "template" class = "org.springframework.jdbc.core.JdbcTemplate">
		<property name = "dataSource" ref = "dataSource"></property>
	</bean>
    
    <!-- transaction bean -->
	<bean name = "transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name = "dataSource" ref = "dataSource" />
	</bean>

	<!-- transactiontemplate bean -->
	<bean name = "transactionTemplate" class = "org.springframework.transaction.support.TransactionTemplate">
		<property name = "transactionManager" ref = "transactionManager"></property>
	</bean>
	
	<!-- template & transactionManger 사용 시 주석 풀고 경로 지정하여 사용할 것.  -->
	<bean name = "dao" class = "com.project.msm.dao.BDaoTemplate">
		<property name = "template" ref = "template"></property>
		<property name = "transactionManager" ref = "transactionManager"></property>
	</bean>
	
	<!-- Password Encoder -->
	<bean name = "passwordEncoder" class = "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    
    <!-- scan -->
    <context:component-scan base-package="com.project.board.service"></context:component-scan>
    <context:component-scan base-package="com.project.board.dao"></context:component-scan>
    <context:component-scan base-package="com.project.board.vo"></context:component-scan>
    <context:component-scan base-package="com.project.goods.service"></context:component-scan>
    <context:component-scan base-package="com.project.goods.dao"></context:component-scan>
    <context:component-scan base-package="com.project.goods.vo"></context:component-scan>
		
</beans>
