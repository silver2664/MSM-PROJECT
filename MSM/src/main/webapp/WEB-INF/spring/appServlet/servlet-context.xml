<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping = "/html/**" location="/resources/html/" />
	<resources mapping = "/stlye/**" location="/resources/style/" />
	<resources mapping = "/js/**" location="/resources/js/" />
	<resources mapping = "/img/**" location="/resources/img/" />
	<resources mapping = "/css/**" location="/resources/css/" />
	<resources mapping = "/font/**" location="/resources/font/" />
	<resources mapping = "/scss/**" location="/resources/scss/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- file upload -->
	<beans:bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
		<beans:property name = "maxUploadSize" value = "52428800" /> <!-- 5mb -->
		<!-- max size of file in memory (in bytes) -->
		<beans:property name = "maxInMemorySize" value = "10485760" /> <!-- 1mb -->
	</beans:bean>

	<!-- JDBC 연결 -->
	<beans:bean name = "dataSource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name = "driverClassName" value = "oracle.jdbc.driver.OracleDriver" />
		<beans:property name = "url" value ="jdbc:oracle:thin:@localhost:1521:orcl" />
		<beans:property name = "username" value = "scott" />
		<beans:property name = "password" value = "tiger" />
	</beans:bean>

	<beans:bean name = "template" class = "org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name = "dataSource" ref = "dataSource"></beans:property>
	</beans:bean>

	<!-- transaction bean -->
	<beans:bean name = "transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name = "dataSource" ref = "dataSource" />
	</beans:bean>

	<!-- transactiontemplate bean -->
	<beans:bean name = "transactionTemplate" class = "org.springframework.transaction.support.TransactionTemplate">
		<beans:property name = "transactionManager" ref = "transactionManager"></beans:property>
	</beans:bean>
	<!-- template & transactionManger 사용 시 주석 풀고 경로 지정하여 사용할 것.
	<beans:bean name = "dao" class = "com.yong.secret02.dao.BDaoTemplate">
		<beans:property name = "template" ref = "template"></beans:property>
		<beans:property name = "transactionManager" ref = "transactionManager"></beans:property>
	</beans:bean>
	 -->
	<context:component-scan base-package="com.project.msm" />
	
	
	
</beans:beans>
